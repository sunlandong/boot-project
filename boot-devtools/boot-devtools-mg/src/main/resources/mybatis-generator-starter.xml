<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
	<!-- 配置文件 -->
	<properties resource="mybatis-generator-base.properties" />

	<!-- 数据库的JDBC驱动 -->
	<classPathEntry location="${driver.path}" />

	<context id="MySql" targetRuntime="MyBatis3">
		<!-- 插件配置 -->
		<property name="javaFileEncoding" value="UTF-8"/>
		<!-- 添加注解插件 -->
		<plugin type="org.boot.devtools.mg.plugins.AnnotationPlugin">
			<property name="annotationClass" value="${AnnotationPlugin.annotationClass}" />
			<property name="annotationName" value="${AnnotationPlugin.annotationName}" />
		</plugin>
	  	<!-- <plugin type="net.renting.devtools.mg.plugin.validation.ValidationPlugin" /> -->
		<plugin type="org.mybatis.generator.plugins.VirtualPrimaryKeyPlugin" />
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
		<plugin type="org.mybatis.generator.plugins.RowBoundsPlugin" />
		<plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin" />
		<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
		<plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">  
	        <property name="searchString" value="Example$" />  
	        <property name="replaceString" value="Criteria" />  
	    </plugin>  

		<commentGenerator>
			<!-- 是否去除自动生成的注释，默认false，true：去除；false：不去除 -->
			<property name="suppressAllComments" value="false" />
			<!-- 指定在生成的注释是否将包括时间戳，默认是false -->
			<property name="suppressDate" value="false" />
		</commentGenerator>

		<jdbcConnection driverClass="${jdbc.driver}" connectionURL="${jdbc.url}" userId="${jdbc.username}" password="${jdbc.password}" />

		<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer; true，把JDBC DECIMAL和 NUMERIC 类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- targetProject:自动生成代码的位置 -->
		<!--生成实体类 指定包名 以及生成的地址 （可以自定义地址，但是路径不存在不会自动创建，使用Maven生成在target目录下，会自动创建） -->
		<javaModelGenerator targetPackage="${javaModelGenerator.targetPackage}" targetProject="${javaModelGenerator.targetProject}">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="true" />
			<!-- 从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!--生成SQLMAP文件 -->
		<sqlMapGenerator targetPackage="${sqlMapGenerator.targetPackage}" targetProject="${sqlMapGenerator.targetProject}">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<!--生成Dao文件 可以配置 type="XMLMAPPER"生成xml的dao实现 context id="DB2Tables" 修改targetRuntime="MyBatis3" -->
		<javaClientGenerator targetPackage="${javaClientGenerator.targetPackage}" targetProject="${javaClientGenerator.targetProject}" type="XMLMAPPER">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>
		
		<!-- 生成全部的表 -->
		<!-- <table tableName="%" /> -->
		
		<table tableName="ACT_AS_APPLICATION" domainObjectName="Application">
        	<property name="rootInterface" value="org.boot.service.activiti.dao.extension.ApplicationExtensionMapper"/>
    	</table>
		<table tableName="ACT_AS_APPROVE_INFO" domainObjectName="ApproveInfo">
        	<property name="rootInterface" value="org.boot.service.activiti.dao.extension.ApproveInfoExtensionMapper"/>
    	</table>
		<table tableName="ACT_AS_TEMPLATE" domainObjectName="Template">
        	<property name="rootInterface" value="org.boot.service.activiti.dao.extension.TemplateExtensionMapper"/>
    	</table>
		
	</context>
</generatorConfiguration>